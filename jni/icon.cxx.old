#include "game.h"

float Icon::vm = 1;
GLint Icon::progLevel = 0;
GLint Icon::vPosLevel = 0;
GLint Icon::vTCLevel = 0;
GLint Icon::vOffsLevel = 0;
GLint Icon::progSound = 0;
GLint Icon::vPosSound = 0;
GLint Icon::vTCSound = 0;
GLint Icon::vOffsSound = 0;
GLint Icon::vState = 0;
float Icon::x1 = 0;
float Icon::x2 = 0;
float Icon::y = 0;

void Icon::Init()
{
  progLevel = MyShader::CreateProgram();
  MyShader::AttachVertexShader  (progLevel, iconVertexShader);
  MyShader::AttachFragmentShader(progLevel, iconLevelFragmentShader);
  MyShader::LinkProgram(progLevel);
  glUseProgram(progLevel);
  vPosLevel  = glGetAttribLocation (progLevel, "vPos");
  vTCLevel   = glGetAttribLocation (progLevel, "vTC");
  vOffsLevel = glGetUniformLocation(progLevel, "vOffs");
  glEnableVertexAttribArray(vPosLevel);
  glEnableVertexAttribArray(vTCLevel);
  glVertexAttribPointer(vPosLevel, 3, GL_FLOAT, false, sizeof(MyVertex), (void*)offsetof(MyVertex,pos));
  glVertexAttribPointer(vTCLevel,  2, GL_FLOAT, false, sizeof(MyVertex), (void*)offsetof(MyVertex,txtcrds));

  progSound = MyShader::CreateProgram();
  MyShader::AttachVertexShader  (progSound, iconVertexShader);
  MyShader::AttachFragmentShader(progSound, iconSoundFragmentShader);
  MyShader::LinkProgram(progSound);
  glUseProgram(progSound);
  vPosSound  = glGetAttribLocation (progSound, "vPos");
  vTCSound   = glGetAttribLocation (progSound, "vTC");
  vOffsSound = glGetUniformLocation(progSound, "vOffs");
  vState     = glGetUniformLocation(progSound, "vState");
  glEnableVertexAttribArray(vPosSound);
  glEnableVertexAttribArray(vTCSound);
  glVertexAttribPointer(vPosSound, 3, GL_FLOAT, false, sizeof(MyVertex), (void*)offsetof(MyVertex,pos));
  glVertexAttribPointer(vTCSound,  2, GL_FLOAT, false, sizeof(MyVertex), (void*)offsetof(MyVertex,txtcrds));

  x1 = -ICON_SIZE/vm/2 - ICON_SIZE/4;
  x2 = ICON_SIZE/vm/2 + ICON_SIZE/4, -1+ICON_SIZE/2;
  y = -1+ICON_SIZE/2;
}

void Icon::Resize(float newMulValue)
{
  vm = newMulValue;
}

void Icon::Render()
{
  glUseProgram(progLevel);
  glUniform4f(vOffsLevel, x1, y, vm, 0);
  glDrawArrays(GL_TRIANGLE_STRIP, 24, 4);

  glUseProgram(progSound);
  glUniform4f(vOffsSound, x2, y, vm, 0);
  glUniform1i(vState, 1);
  glDrawArrays(GL_TRIANGLE_STRIP, 24, 4);
}

int Icon::Tap(float tx, float ty)
{
//  char msg[256];
//  sprintf(msg, "x1=%f, x2=%f, y=%f, tx=%f, ty=%f", x1, x2, y, tx, ty);
//  MyCallback::Toast(msg);


  if(ty <= y-ICON_SIZE/2) return 0;
  if(ty >= y+ICON_SIZE/2) return 0;
  
  if( (tx >= x1-ICON_SIZE/vm/2) && (tx <= x1+ICON_SIZE/vm/2) )
    return 1;

  if( (tx >= x2-ICON_SIZE/vm/2) && (tx <= x2+ICON_SIZE/vm/2) )
    return 2;

  return 0;
}
